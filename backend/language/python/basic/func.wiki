== 内置函数 ==

==== 切片 ====
`slice([start], stop[, step])`

==== 动态变量名 ====
传入一个字符串参数，要访问同名的变量

globals()访问全局变量

locals()访问局部变量

python使用名字空间（一个字典）来管理变量
* 局部名字空间
* 全局名字空间
* 内置名字空间

[[http://woodpecker.org.cn/diveintopython/html_processing/locals_and_globals.html]]

或者使用getattr

`getattr(object, name[, default]) -> value`

==== 读写文件 ====
[[http://docs.python.org/2/tutorial/inputoutput.html#methods-of-file-objects]]

`f = open("filename", "w")`打开文件

| 参数 | 含义               |
|------|--------------------|
| w    | 写，将覆盖现有文件 |
| r    | 读                 |
| r+   | 读写               |
| a    | 附加               |

`f.read()`读

`f.write()`写

`f.close()`关闭

==== 导入 ====
`import xxx`

导入上层目录的包
{{{
import sys
sys.path.append("..")
import xxx
}}}

==== map ====
有时候我们可以需要处理一个列表里的所有元素，可以使用一个for循环来完成这个工作。但是Python内置的map函数可以帮我们的忙，它接受函数和列表作为参数，然后返回函数处理之后的列表。

{{{
def mul2(x):
  return x*2
testList = [1,2,3,4]
print map(mul2,testList)
}}}

==== enumerate ====
`enumerate(iterable, start=0)`

回传参数与连续整数配对的enumerate对象，在同时需要index和value值的时候可以使用enumerate
