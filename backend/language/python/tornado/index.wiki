= tornado =
非阻塞的基于python的web服务器

[[http://www.tornadoweb.org/|官方网站]]

[[http://www.tornadoweb.cn/documentation|中文文档]]

[[http://kjam.org/cn/tornado-prespective.html|tronado开发工具链]]

[[http://www.zhihu.com/question/20136991|如何理解tornado?]]

[[http://www.zhihu.com/question/19707966|有没有什么很好的 Tornado 的教材或者开源项目可以做参考的？]]

[[http://www.cnblogs.com/yiwenshengmei/archive/2011/06/08/understanding_tornado.html|深入理解Tornado——一个异步web服务器]]
== 安装 ==

== options ==
A command line parsing module that lets modules define their own options.



== 路由、获取参数 ==

路由通过以下方式添加
{{{
application = tornado.web.Application([
    (r"/", MainHandler),
    (r"/story/([0-9]+)", StoryHandler),
])
}}}

参数无论GET/POST均通过`self.get_argument("para_name")`获取
== 异步 ==
在执行一些耗费时间的中间程序时，可以使用异步的方法，tornado可以先去执行其他操作，而不需阻塞到程序执行完成。这样可以显著提高后端的处理能力。

注意，这里只有当显式调用finish之后才会把响应返回到浏览器。浏览器依然要等待从发起请求到finish返回的这段时间。后端的异步并不能减少前端的等待。

{{{
def get(self):
    self.ioloop = tornado.ioloop.IOLoop.instance()
    self.pipe = p = os.popen('sleep 5; cat /etc/mime.types')
    self.ioloop.add_handler( p.fileno(), self.async_callback(self.on_response), self.ioloop.READ )

def on_response(self,fd,events):
    for line in self.pipe:
        self.write( line )

    self.ioloop.remove_handler(fd)
    self.finish()
}}}

