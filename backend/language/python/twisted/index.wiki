==twisted是什么==
Twisted is an event-driven networking engine written in Python.
[[http://twistedmatrix.com/trac/]]

==文档==
[[http://krondo.com/blog/?page_id=1327]]
[[http://blog.sina.com.cn/s/blog_704b6af70100py9f.html]]

==理论基础==
参考资料：《Unix网络编程》第一卷第6章

一个输入有两个操作阶段：
# 等待数据准备好
# 等待从内核拷贝到用户空间

阻塞/非阻塞说明的是进程的执行状态
* 阻塞：请求进程需要在两个阶段中（one or both）等待其完成才能执行下一条语句
* 非阻塞：请求进程不需在两个阶段中等待即可执行下一条语句

同步/异步说明的是进程和IO操作的关系
* 同步：同步IO操作引起请求进程阻塞，直到IO操作完成
* 异步：异步IO操作不引起请求进程阻塞

===同步模型===

===多线程模型===

===异步模型===
相比于同步模型，异步模型的好处是：
在存在阻塞的情况下（磁盘IO、网络传输），可以加快响应速度，提高效率。

== 安装 ==
`easy_install twisted`

== 特性 ==
twisted的reactor和回调函数运行在同一个线程中。在一个回调函数执行过程中，实际上Twisted的循环被阻塞在我们的代码上。因此，因此我们应该确保回调函数不要浪费时间（尽快返回）。特别需要强调的是，我们应该尽量避免在回调函数中使用会阻塞I/O的函数。否则，我们将失去所有使用reactor所带来的优势。

reactor并不会因为回调函数中出现失败（虽然它会报告异常）而停止运行

== 函数 ==

=== reactor ===
如果你没有安装其它特殊的reactor而引入了twisted.internet.reactor，那么Twisted会为你安装selectreactor。正因为如此，习惯性做法不要在最顶层的模块内引入reactor以避免安装默认reactor，而是在你要使用reactor的区域内安装。
