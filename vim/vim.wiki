%title VIM

== 如何使用vim ==

你需要知道自己具体的编辑方式，并且只学习那些能让你的编辑更高效的命令。

三个基本步骤：
* 当你正在编辑时，留意那些重复的和（或者）花费相当多时间的动作。
* 寻找一个能更快完成这个动作的编辑器命令。你可以阅读文档，询问朋友，或者看看别人是怎么做的。
* 练习使用这个命令，直到无需思考你的手指就能输入。

[[http://blog.jobbole.com/44891/|七个高效的文本编辑习惯]]

[[http://coolshell.cn/articles/11312.html|无插件Vim编程技巧]]

== 安装 ==
`yum install vim*`

mac下环境配置 [[http://mjason.github.io/blog/2013/02/08/mac-xia-de-vim-mei-hua-(iterm2-zsh-powerline)/]]

=== 插件管理 ===
pathogen

[[http://www.cnblogs.com/taskiller/archive/2012/08/14/2637689.html|vim管理插件的插件: pathogen.vim]]

=== 插件 ===
* [[https://github.com/Lokaltog/vim-powerline|vim powerline]]
* [[https://github.com/vim-scripts/vimwiki|vimwiki]]

== 配置文件 ==
全局 `/usr/share/vim/vim73`

个人 `~/.vim/`  `~/.vimrc`

[[https://github.com/square/maximum-awesome|Square 的vim配置]]

=== 使用map绑定快捷键 ===
`inoremap %tt %title` 这样只要在输入模式下输入`%tt`，就会自动转换为`%title`

=== leader key ===
`:let mapleader`可以查看当前的leader key

== 命令模式 ==
[[cmds|命令]]

以下命令可以对标点内的内容进行操作。
* ci'、ci"、ci(、ci[、ci{、ci< - 分别更改这些配对标点符号中的文本内容
* di'、di"、di(或dib、di[、di{或diB、di< - 分别删除这些配对标点符号中的文本内容
* yi'、yi"、yi(、yi[、yi{、yi< - 分别复制这些配对标点符号中的文本内容
* vi'、vi"、vi(、vi[、vi{、vi< - 分别选中这些配对标点符号中的文本内容

`tabe filename`可以在新标签中打开文件

使用`gt`, `gT`在不同tabe间切换

=== 搜索 ===
[[http://www.bagualu.net/wordpress/?p=2240vim|多文件搜索并实现自动跳转]]

{{{
grep -irn pattern files
:cw #显示结果列表
:cn 移动到下一个结果
}}}

[[http://vim.wikia.com/wiki/Find_in_files_within_Vim|Find in files within Vim]]

如果你看到一个特定的单词，并想搜索它出现的其他地方，就使用命令`*`。它会从光标下面定位找到这个单词，并且搜索下一个

=== 移动 ===
使用`%`从一个左括号跳转到与其配对的右括号，或从一个“#if”到配对的“#endif”。实际上%可以跳转到许多不同的匹配项目。它对检查if()和{}的结构完整性非常有用。
使用`[{`跳回当前代码块起始的“{”， `]}`同理
 
== 插入模式 ==
A向行末插入 

a后一个字母插入 

I行首插入 

i当前位置插入 

o下一行插入（另起一行） 

O上一行插入（另起一行） 

摁一次ESC退出到命令行模式 

== EX模式 ==
`w`

`q` 

!强制 

`x`=`wq` 

摁两次ESC退出到命令行模式 

[[vbundle]]

[[nerdtree]]
