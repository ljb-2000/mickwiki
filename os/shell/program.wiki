= shell 编程 =
== 语法 ==
=== 变量 ===
shell把所有变量中的值都当作字符串
`name=varlue` 变量声明、赋值

`$name` `${name}`取值，最好使用第二种方法，避免歧义

在双引号`""`中的内容可以被进一步替换，比如变量会显示为值。单引号`''`中的内容不会被替换，直接输出。
=== for ===
{{{
for i in 串行
do
    ${i}
done
}}}

串行可以是：
* 1 2 3 4
* $(seq 1 100)

另外一种语法，类似c
{{{
for ((初始条件; 终止条件; 变动))
do
    #do sth
done
}}}
=== if ===



== awk ==
[[awk|awk]]

== sed ==
[[sed|sed]]

==== 排错 ====

==== 环境变量 ====
===== 使用sh执行 =====

===== 使用crontab =====

==== I/O重定向 ====
`>` 输出重定向，覆盖

`>>` 追加

`<` 输入重定向

`1>` 标准输出

`2>` 标准错误

`2>&1` 2到1

`&>` 1和2

* shell负责重定向，对于程序或者函数，这一切都是透明的，它只管输入输出，至于从哪输入哪输出，是shell解释器负责
* shell命令解析过程中，在实际执行命令前，IO重定向先设置好

[[http://www.igigo.net/archives/79]]

==== tcp/udp ====
`/dev/[tcp|upd]/host/port` 只要读取或者写入这个文件，相当于系统会尝试连接host这台机器，对应port端口。如果主机以及端口存在，就建立一个socket连接。并且/proc/self/fd目录下面有对应的文件出现。

[[http://www.cnblogs.com/chengmo/archive/2010/10/22/1858302.html]]
